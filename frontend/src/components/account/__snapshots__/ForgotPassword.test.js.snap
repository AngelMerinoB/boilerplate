// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ForgotPassword /> should render <ForgotPassword /> without errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ForgotPassword
    forgotPassword={[Function]}
    location={
      Object {
        "search": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <br />,
        <div
          className="columns is-mobile"
        >
          <div
            className="column is-half is-offset-one-fifth"
          >
            <div
              className="box"
            >
              <Form
                ErrorList={[Function]}
                disabled={false}
                liveValidate={false}
                noHtml5Validate={true}
                noValidate={false}
                onSubmit={[Function]}
                safeRenderCompletion={false}
                schema={
                  Object {
                    "properties": Object {
                      "email": Object {
                        "format": "email",
                        "title": "Your email address",
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "email",
                    ],
                    "title": "Password reset",
                    "type": "object",
                  }
                }
                uiSchema={
                  Object {
                    "email": Object {
                      "ui:help": "We will send you reset instructions in an email",
                      "ui:placeholder": "you@example.com",
                    },
                  }
                }
              >
                <fieldset>
                  <button
                    className="btn btn-primary btn-lg btn-block"
                    type="submit"
                  >
                    Send reset instructions
                  </button>
                  <div
                    className="mt-2"
                  >
                    <div
                      className="float-left"
                    >
                      <Link
                        replace={false}
                        to="/account/register"
                      >
                        Create an account
                      </Link>
                    </div>
                    <div
                      className="float-right d-block"
                    >
                      <Link
                        replace={false}
                        to="/account/login"
                      >
                        Log In
                      </Link>
                    </div>
                  </div>
                </fieldset>
              </Form>
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="column is-half is-offset-one-fifth"
          >
            <div
              className="box"
            >
              <Form
                ErrorList={[Function]}
                disabled={false}
                liveValidate={false}
                noHtml5Validate={true}
                noValidate={false}
                onSubmit={[Function]}
                safeRenderCompletion={false}
                schema={
                  Object {
                    "properties": Object {
                      "email": Object {
                        "format": "email",
                        "title": "Your email address",
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "email",
                    ],
                    "title": "Password reset",
                    "type": "object",
                  }
                }
                uiSchema={
                  Object {
                    "email": Object {
                      "ui:help": "We will send you reset instructions in an email",
                      "ui:placeholder": "you@example.com",
                    },
                  }
                }
              >
                <fieldset>
                  <button
                    className="btn btn-primary btn-lg btn-block"
                    type="submit"
                  >
                    Send reset instructions
                  </button>
                  <div
                    className="mt-2"
                  >
                    <div
                      className="float-left"
                    >
                      <Link
                        replace={false}
                        to="/account/register"
                      >
                        Create an account
                      </Link>
                    </div>
                    <div
                      className="float-right d-block"
                    >
                      <Link
                        replace={false}
                        to="/account/login"
                      >
                        Log In
                      </Link>
                    </div>
                  </div>
                </fieldset>
              </Form>
            </div>
          </div>,
          "className": "columns is-mobile",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="box"
            >
              <Form
                ErrorList={[Function]}
                disabled={false}
                liveValidate={false}
                noHtml5Validate={true}
                noValidate={false}
                onSubmit={[Function]}
                safeRenderCompletion={false}
                schema={
                  Object {
                    "properties": Object {
                      "email": Object {
                        "format": "email",
                        "title": "Your email address",
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "email",
                    ],
                    "title": "Password reset",
                    "type": "object",
                  }
                }
                uiSchema={
                  Object {
                    "email": Object {
                      "ui:help": "We will send you reset instructions in an email",
                      "ui:placeholder": "you@example.com",
                    },
                  }
                }
              >
                <fieldset>
                  <button
                    className="btn btn-primary btn-lg btn-block"
                    type="submit"
                  >
                    Send reset instructions
                  </button>
                  <div
                    className="mt-2"
                  >
                    <div
                      className="float-left"
                    >
                      <Link
                        replace={false}
                        to="/account/register"
                      >
                        Create an account
                      </Link>
                    </div>
                    <div
                      className="float-right d-block"
                    >
                      <Link
                        replace={false}
                        to="/account/login"
                      >
                        Log In
                      </Link>
                    </div>
                  </div>
                </fieldset>
              </Form>
            </div>,
            "className": "column is-half is-offset-one-fifth",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Form
                ErrorList={[Function]}
                disabled={false}
                liveValidate={false}
                noHtml5Validate={true}
                noValidate={false}
                onSubmit={[Function]}
                safeRenderCompletion={false}
                schema={
                  Object {
                    "properties": Object {
                      "email": Object {
                        "format": "email",
                        "title": "Your email address",
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "email",
                    ],
                    "title": "Password reset",
                    "type": "object",
                  }
                }
                uiSchema={
                  Object {
                    "email": Object {
                      "ui:help": "We will send you reset instructions in an email",
                      "ui:placeholder": "you@example.com",
                    },
                  }
                }
              >
                <fieldset>
                  <button
                    className="btn btn-primary btn-lg btn-block"
                    type="submit"
                  >
                    Send reset instructions
                  </button>
                  <div
                    className="mt-2"
                  >
                    <div
                      className="float-left"
                    >
                      <Link
                        replace={false}
                        to="/account/register"
                      >
                        Create an account
                      </Link>
                    </div>
                    <div
                      className="float-right d-block"
                    >
                      <Link
                        replace={false}
                        to="/account/login"
                      >
                        Log In
                      </Link>
                    </div>
                  </div>
                </fieldset>
              </Form>,
              "className": "box",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "ErrorList": [Function],
                "children": Array [
                  undefined,
                  <fieldset>
                    <button
                      className="btn btn-primary btn-lg btn-block"
                      type="submit"
                    >
                      Send reset instructions
                    </button>
                    <div
                      className="mt-2"
                    >
                      <div
                        className="float-left"
                      >
                        <Link
                          replace={false}
                          to="/account/register"
                        >
                          Create an account
                        </Link>
                      </div>
                      <div
                        className="float-right d-block"
                      >
                        <Link
                          replace={false}
                          to="/account/login"
                        >
                          Log In
                        </Link>
                      </div>
                    </div>
                  </fieldset>,
                ],
                "disabled": false,
                "liveValidate": false,
                "noHtml5Validate": true,
                "noValidate": false,
                "onSubmit": [Function],
                "safeRenderCompletion": false,
                "schema": Object {
                  "properties": Object {
                    "email": Object {
                      "format": "email",
                      "title": "Your email address",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "email",
                  ],
                  "title": "Password reset",
                  "type": "object",
                },
                "uiSchema": Object {
                  "email": Object {
                    "ui:help": "We will send you reset instructions in an email",
                    "ui:placeholder": "you@example.com",
                  },
                },
              },
              "ref": null,
              "rendered": Array [
                undefined,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <button
                        className="btn btn-primary btn-lg btn-block"
                        type="submit"
                      >
                        Send reset instructions
                      </button>,
                      <div
                        className="mt-2"
                      >
                        <div
                          className="float-left"
                        >
                          <Link
                            replace={false}
                            to="/account/register"
                          >
                            Create an account
                          </Link>
                        </div>
                        <div
                          className="float-right d-block"
                        >
                          <Link
                            replace={false}
                            to="/account/login"
                          >
                            Log In
                          </Link>
                        </div>
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Send reset instructions",
                        "className": "btn btn-primary btn-lg btn-block",
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Send reset instructions",
                      "type": "button",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <div
                            className="float-left"
                          >
                            <Link
                              replace={false}
                              to="/account/register"
                            >
                              Create an account
                            </Link>
                          </div>,
                          <div
                            className="float-right d-block"
                          >
                            <Link
                              replace={false}
                              to="/account/login"
                            >
                              Log In
                            </Link>
                          </div>,
                        ],
                        "className": "mt-2",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Link
                              replace={false}
                              to="/account/register"
                            >
                              Create an account
                            </Link>,
                            "className": "float-left",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "Create an account",
                              "replace": false,
                              "to": "/account/register",
                            },
                            "ref": null,
                            "rendered": "Create an account",
                            "type": [Function],
                          },
                          "type": "div",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Link
                              replace={false}
                              to="/account/login"
                            >
                              Log In
                            </Link>,
                            "className": "float-right d-block",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "Log In",
                              "replace": false,
                              "to": "/account/login",
                            },
                            "ref": null,
                            "rendered": "Log In",
                            "type": [Function],
                          },
                          "type": "div",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "fieldset",
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <br />,
          <div
            className="columns is-mobile"
          >
            <div
              className="column is-half is-offset-one-fifth"
            >
              <div
                className="box"
              >
                <Form
                  ErrorList={[Function]}
                  disabled={false}
                  liveValidate={false}
                  noHtml5Validate={true}
                  noValidate={false}
                  onSubmit={[Function]}
                  safeRenderCompletion={false}
                  schema={
                    Object {
                      "properties": Object {
                        "email": Object {
                          "format": "email",
                          "title": "Your email address",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "email",
                      ],
                      "title": "Password reset",
                      "type": "object",
                    }
                  }
                  uiSchema={
                    Object {
                      "email": Object {
                        "ui:help": "We will send you reset instructions in an email",
                        "ui:placeholder": "you@example.com",
                      },
                    }
                  }
                >
                  <fieldset>
                    <button
                      className="btn btn-primary btn-lg btn-block"
                      type="submit"
                    >
                      Send reset instructions
                    </button>
                    <div
                      className="mt-2"
                    >
                      <div
                        className="float-left"
                      >
                        <Link
                          replace={false}
                          to="/account/register"
                        >
                          Create an account
                        </Link>
                      </div>
                      <div
                        className="float-right d-block"
                      >
                        <Link
                          replace={false}
                          to="/account/login"
                        >
                          Log In
                        </Link>
                      </div>
                    </div>
                  </fieldset>
                </Form>
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="column is-half is-offset-one-fifth"
            >
              <div
                className="box"
              >
                <Form
                  ErrorList={[Function]}
                  disabled={false}
                  liveValidate={false}
                  noHtml5Validate={true}
                  noValidate={false}
                  onSubmit={[Function]}
                  safeRenderCompletion={false}
                  schema={
                    Object {
                      "properties": Object {
                        "email": Object {
                          "format": "email",
                          "title": "Your email address",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "email",
                      ],
                      "title": "Password reset",
                      "type": "object",
                    }
                  }
                  uiSchema={
                    Object {
                      "email": Object {
                        "ui:help": "We will send you reset instructions in an email",
                        "ui:placeholder": "you@example.com",
                      },
                    }
                  }
                >
                  <fieldset>
                    <button
                      className="btn btn-primary btn-lg btn-block"
                      type="submit"
                    >
                      Send reset instructions
                    </button>
                    <div
                      className="mt-2"
                    >
                      <div
                        className="float-left"
                      >
                        <Link
                          replace={false}
                          to="/account/register"
                        >
                          Create an account
                        </Link>
                      </div>
                      <div
                        className="float-right d-block"
                      >
                        <Link
                          replace={false}
                          to="/account/login"
                        >
                          Log In
                        </Link>
                      </div>
                    </div>
                  </fieldset>
                </Form>
              </div>
            </div>,
            "className": "columns is-mobile",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="box"
              >
                <Form
                  ErrorList={[Function]}
                  disabled={false}
                  liveValidate={false}
                  noHtml5Validate={true}
                  noValidate={false}
                  onSubmit={[Function]}
                  safeRenderCompletion={false}
                  schema={
                    Object {
                      "properties": Object {
                        "email": Object {
                          "format": "email",
                          "title": "Your email address",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "email",
                      ],
                      "title": "Password reset",
                      "type": "object",
                    }
                  }
                  uiSchema={
                    Object {
                      "email": Object {
                        "ui:help": "We will send you reset instructions in an email",
                        "ui:placeholder": "you@example.com",
                      },
                    }
                  }
                >
                  <fieldset>
                    <button
                      className="btn btn-primary btn-lg btn-block"
                      type="submit"
                    >
                      Send reset instructions
                    </button>
                    <div
                      className="mt-2"
                    >
                      <div
                        className="float-left"
                      >
                        <Link
                          replace={false}
                          to="/account/register"
                        >
                          Create an account
                        </Link>
                      </div>
                      <div
                        className="float-right d-block"
                      >
                        <Link
                          replace={false}
                          to="/account/login"
                        >
                          Log In
                        </Link>
                      </div>
                    </div>
                  </fieldset>
                </Form>
              </div>,
              "className": "column is-half is-offset-one-fifth",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Form
                  ErrorList={[Function]}
                  disabled={false}
                  liveValidate={false}
                  noHtml5Validate={true}
                  noValidate={false}
                  onSubmit={[Function]}
                  safeRenderCompletion={false}
                  schema={
                    Object {
                      "properties": Object {
                        "email": Object {
                          "format": "email",
                          "title": "Your email address",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "email",
                      ],
                      "title": "Password reset",
                      "type": "object",
                    }
                  }
                  uiSchema={
                    Object {
                      "email": Object {
                        "ui:help": "We will send you reset instructions in an email",
                        "ui:placeholder": "you@example.com",
                      },
                    }
                  }
                >
                  <fieldset>
                    <button
                      className="btn btn-primary btn-lg btn-block"
                      type="submit"
                    >
                      Send reset instructions
                    </button>
                    <div
                      className="mt-2"
                    >
                      <div
                        className="float-left"
                      >
                        <Link
                          replace={false}
                          to="/account/register"
                        >
                          Create an account
                        </Link>
                      </div>
                      <div
                        className="float-right d-block"
                      >
                        <Link
                          replace={false}
                          to="/account/login"
                        >
                          Log In
                        </Link>
                      </div>
                    </div>
                  </fieldset>
                </Form>,
                "className": "box",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "ErrorList": [Function],
                  "children": Array [
                    undefined,
                    <fieldset>
                      <button
                        className="btn btn-primary btn-lg btn-block"
                        type="submit"
                      >
                        Send reset instructions
                      </button>
                      <div
                        className="mt-2"
                      >
                        <div
                          className="float-left"
                        >
                          <Link
                            replace={false}
                            to="/account/register"
                          >
                            Create an account
                          </Link>
                        </div>
                        <div
                          className="float-right d-block"
                        >
                          <Link
                            replace={false}
                            to="/account/login"
                          >
                            Log In
                          </Link>
                        </div>
                      </div>
                    </fieldset>,
                  ],
                  "disabled": false,
                  "liveValidate": false,
                  "noHtml5Validate": true,
                  "noValidate": false,
                  "onSubmit": [Function],
                  "safeRenderCompletion": false,
                  "schema": Object {
                    "properties": Object {
                      "email": Object {
                        "format": "email",
                        "title": "Your email address",
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "email",
                    ],
                    "title": "Password reset",
                    "type": "object",
                  },
                  "uiSchema": Object {
                    "email": Object {
                      "ui:help": "We will send you reset instructions in an email",
                      "ui:placeholder": "you@example.com",
                    },
                  },
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <button
                          className="btn btn-primary btn-lg btn-block"
                          type="submit"
                        >
                          Send reset instructions
                        </button>,
                        <div
                          className="mt-2"
                        >
                          <div
                            className="float-left"
                          >
                            <Link
                              replace={false}
                              to="/account/register"
                            >
                              Create an account
                            </Link>
                          </div>
                          <div
                            className="float-right d-block"
                          >
                            <Link
                              replace={false}
                              to="/account/login"
                            >
                              Log In
                            </Link>
                          </div>
                        </div>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Send reset instructions",
                          "className": "btn btn-primary btn-lg btn-block",
                          "type": "submit",
                        },
                        "ref": null,
                        "rendered": "Send reset instructions",
                        "type": "button",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <div
                              className="float-left"
                            >
                              <Link
                                replace={false}
                                to="/account/register"
                              >
                                Create an account
                              </Link>
                            </div>,
                            <div
                              className="float-right d-block"
                            >
                              <Link
                                replace={false}
                                to="/account/login"
                              >
                                Log In
                              </Link>
                            </div>,
                          ],
                          "className": "mt-2",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <Link
                                replace={false}
                                to="/account/register"
                              >
                                Create an account
                              </Link>,
                              "className": "float-left",
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "children": "Create an account",
                                "replace": false,
                                "to": "/account/register",
                              },
                              "ref": null,
                              "rendered": "Create an account",
                              "type": [Function],
                            },
                            "type": "div",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <Link
                                replace={false}
                                to="/account/login"
                              >
                                Log In
                              </Link>,
                              "className": "float-right d-block",
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "children": "Log In",
                                "replace": false,
                                "to": "/account/login",
                              },
                              "ref": null,
                              "rendered": "Log In",
                              "type": [Function],
                            },
                            "type": "div",
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "fieldset",
                  },
                ],
                "type": [Function],
              },
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<ForgotPassword /> should render the sent message 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ForgotPassword
    forgotPassword={[Function]}
    location={
      Object {
        "search": "?sent",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="card shadow-lg p-3 mb-5 bg-white rounded"
        style={
          Object {
            "margin": "100px auto",
            "width": "20rem",
          }
        }
      >
        <div
          className="card-body"
        >
          <h5
            className="card-title"
          >
            <i
              className="fas fa-envelope"
            />
          </h5>
          <p
            className="card-text"
          >
            Check your inbox, we have sent you an email with instructions to reset your email.
          </p>
        </div>
      </div>,
      "className": "container text-center",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="card-body"
        >
          <h5
            className="card-title"
          >
            <i
              className="fas fa-envelope"
            />
          </h5>
          <p
            className="card-text"
          >
            Check your inbox, we have sent you an email with instructions to reset your email.
          </p>
        </div>,
        "className": "card shadow-lg p-3 mb-5 bg-white rounded",
        "style": Object {
          "margin": "100px auto",
          "width": "20rem",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h5
              className="card-title"
            >
              <i
                className="fas fa-envelope"
              />
            </h5>,
            <p
              className="card-text"
            >
              Check your inbox, we have sent you an email with instructions to reset your email.
            </p>,
          ],
          "className": "card-body",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="fas fa-envelope"
              />,
              "className": "card-title",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fas fa-envelope",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "h5",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Check your inbox, we have sent you an email with instructions to reset your email.",
              "className": "card-text",
            },
            "ref": null,
            "rendered": "Check your inbox, we have sent you an email with instructions to reset your email.",
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="card shadow-lg p-3 mb-5 bg-white rounded"
          style={
            Object {
              "margin": "100px auto",
              "width": "20rem",
            }
          }
        >
          <div
            className="card-body"
          >
            <h5
              className="card-title"
            >
              <i
                className="fas fa-envelope"
              />
            </h5>
            <p
              className="card-text"
            >
              Check your inbox, we have sent you an email with instructions to reset your email.
            </p>
          </div>
        </div>,
        "className": "container text-center",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="card-body"
          >
            <h5
              className="card-title"
            >
              <i
                className="fas fa-envelope"
              />
            </h5>
            <p
              className="card-text"
            >
              Check your inbox, we have sent you an email with instructions to reset your email.
            </p>
          </div>,
          "className": "card shadow-lg p-3 mb-5 bg-white rounded",
          "style": Object {
            "margin": "100px auto",
            "width": "20rem",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h5
                className="card-title"
              >
                <i
                  className="fas fa-envelope"
                />
              </h5>,
              <p
                className="card-text"
              >
                Check your inbox, we have sent you an email with instructions to reset your email.
              </p>,
            ],
            "className": "card-body",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="fas fa-envelope"
                />,
                "className": "card-title",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fas fa-envelope",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              "type": "h5",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Check your inbox, we have sent you an email with instructions to reset your email.",
                "className": "card-text",
              },
              "ref": null,
              "rendered": "Check your inbox, we have sent you an email with instructions to reset your email.",
              "type": "p",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
