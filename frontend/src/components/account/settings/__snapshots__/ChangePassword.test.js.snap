// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ChangePassword /> should render <ChangePassword /> without errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChangePassword
    changePassword={[Function]}
    location={
        Object {
            "search": "",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Form
        ErrorList={[Function]}
        liveValidate={false}
        noHtml5Validate={true}
        noValidate={false}
        onSubmit={[Function]}
        safeRenderCompletion={false}
        schema={
                Object {
                        "properties": Object {
                          "newPassword": Object {
                            "title": "New password",
                            "type": "string",
                          },
                          "oldPassword": Object {
                            "title": "Old password",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "oldPassword",
                          "newPassword",
                        ],
                        "title": "Change your password",
                        "type": "object",
                      }
        }
        uiSchema={
                Object {
                        "newPassword": Object {
                          "ui:widget": "password",
                        },
                        "oldPassword": Object {
                          "ui:widget": "password",
                        },
                      }
        }
>
        <fieldset>
                <button
                        className="btn btn-primary"
                        type="submit"
                >
                        Change your password
                </button>
        </fieldset>
</Form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "ErrorList": [Function],
        "children": Array [
          undefined,
          <fieldset>
            <button
                        className="btn btn-primary"
                        type="submit"
            >
                        Change your password
            </button>
</fieldset>,
        ],
        "liveValidate": false,
        "noHtml5Validate": true,
        "noValidate": false,
        "onSubmit": [Function],
        "safeRenderCompletion": false,
        "schema": Object {
          "properties": Object {
            "newPassword": Object {
              "title": "New password",
              "type": "string",
            },
            "oldPassword": Object {
              "title": "Old password",
              "type": "string",
            },
          },
          "required": Array [
            "oldPassword",
            "newPassword",
          ],
          "title": "Change your password",
          "type": "object",
        },
        "uiSchema": Object {
          "newPassword": Object {
            "ui:widget": "password",
          },
          "oldPassword": Object {
            "ui:widget": "password",
          },
        },
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-primary"
              type="submit"
>
              Change your password
</button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Change your password",
              "className": "btn btn-primary",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Change your password",
            "type": "button",
          },
          "type": "fieldset",
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Form
          ErrorList={[Function]}
          liveValidate={false}
          noHtml5Validate={true}
          noValidate={false}
          onSubmit={[Function]}
          safeRenderCompletion={false}
          schema={
                    Object {
                              "properties": Object {
                                "newPassword": Object {
                                  "title": "New password",
                                  "type": "string",
                                },
                                "oldPassword": Object {
                                  "title": "Old password",
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "oldPassword",
                                "newPassword",
                              ],
                              "title": "Change your password",
                              "type": "object",
                            }
          }
          uiSchema={
                    Object {
                              "newPassword": Object {
                                "ui:widget": "password",
                              },
                              "oldPassword": Object {
                                "ui:widget": "password",
                              },
                            }
          }
>
          <fieldset>
                    <button
                              className="btn btn-primary"
                              type="submit"
                    >
                              Change your password
                    </button>
          </fieldset>
</Form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "ErrorList": [Function],
          "children": Array [
            undefined,
            <fieldset>
              <button
                            className="btn btn-primary"
                            type="submit"
              >
                            Change your password
              </button>
</fieldset>,
          ],
          "liveValidate": false,
          "noHtml5Validate": true,
          "noValidate": false,
          "onSubmit": [Function],
          "safeRenderCompletion": false,
          "schema": Object {
            "properties": Object {
              "newPassword": Object {
                "title": "New password",
                "type": "string",
              },
              "oldPassword": Object {
                "title": "Old password",
                "type": "string",
              },
            },
            "required": Array [
              "oldPassword",
              "newPassword",
            ],
            "title": "Change your password",
            "type": "object",
          },
          "uiSchema": Object {
            "newPassword": Object {
              "ui:widget": "password",
            },
            "oldPassword": Object {
              "ui:widget": "password",
            },
          },
        },
        "ref": null,
        "rendered": Array [
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="btn btn-primary"
                type="submit"
>
                Change your password
</button>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Change your password",
                "className": "btn btn-primary",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Change your password",
              "type": "button",
            },
            "type": "fieldset",
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<ChangePassword /> should render the success message 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChangePassword
    changePassword={[Function]}
    location={
        Object {
            "search": "?ok",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="card shadow-lg p-3 mb-5 bg-white rounded"
        style={
                Object {
                        "margin": "100px auto",
                        "width": "20rem",
                      }
        }
>
        <div
                className="card-body"
        >
                <h5
                        className="card-title"
                >
                        <i
                                className="fas fa-check"
                        />
                </h5>
                <p
                        className="card-text"
                >
                        Your password has been changed successfully.
                </p>
        </div>
</div>,
      "className": "container text-center",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="card-body"
>
          <h5
                    className="card-title"
          >
                    <i
                              className="fas fa-check"
                    />
          </h5>
          <p
                    className="card-text"
          >
                    Your password has been changed successfully.
          </p>
</div>,
        "className": "card shadow-lg p-3 mb-5 bg-white rounded",
        "style": Object {
          "margin": "100px auto",
          "width": "20rem",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h5
              className="card-title"
>
              <i
                            className="fas fa-check"
              />
</h5>,
            <p
              className="card-text"
>
              Your password has been changed successfully.
</p>,
          ],
          "className": "card-body",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="fas fa-check"
/>,
              "className": "card-title",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fas fa-check",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "h5",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Your password has been changed successfully.",
              "className": "card-text",
            },
            "ref": null,
            "rendered": "Your password has been changed successfully.",
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="card shadow-lg p-3 mb-5 bg-white rounded"
          style={
                    Object {
                              "margin": "100px auto",
                              "width": "20rem",
                            }
          }
>
          <div
                    className="card-body"
          >
                    <h5
                              className="card-title"
                    >
                              <i
                                        className="fas fa-check"
                              />
                    </h5>
                    <p
                              className="card-text"
                    >
                              Your password has been changed successfully.
                    </p>
          </div>
</div>,
        "className": "container text-center",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="card-body"
>
            <h5
                        className="card-title"
            >
                        <i
                                    className="fas fa-check"
                        />
            </h5>
            <p
                        className="card-text"
            >
                        Your password has been changed successfully.
            </p>
</div>,
          "className": "card shadow-lg p-3 mb-5 bg-white rounded",
          "style": Object {
            "margin": "100px auto",
            "width": "20rem",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h5
                className="card-title"
>
                <i
                                className="fas fa-check"
                />
</h5>,
              <p
                className="card-text"
>
                Your password has been changed successfully.
</p>,
            ],
            "className": "card-body",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="fas fa-check"
/>,
                "className": "card-title",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fas fa-check",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              "type": "h5",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Your password has been changed successfully.",
                "className": "card-text",
              },
              "ref": null,
              "rendered": "Your password has been changed successfully.",
              "type": "p",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
